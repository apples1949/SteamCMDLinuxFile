name: SteamCMD Upload

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y lib32gcc-s1 python3-pip
        sudo timedatectl set-timezone Asia/Shanghai

    - name: Install Python Dependencies
      run: |
        pip3 install requests base58 pycryptodomex

    - name: Prepare Directories
      run: |
        mkdir -p "$GITHUB_WORKSPACE/build"  
        WORKDIR="$HOME/steamcmd_build"
        mkdir -p "$WORKDIR"
        cd "$WORKDIR"
        echo "Current dir: $(pwd)"

    - name: Download SteamCMD
      run: |
        cd "$HOME/steamcmd_build"
        wget -q https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
        tar -xzf steamcmd_linux.tar.gz
        rm steamcmd_linux.tar.gz
        ./steamcmd.sh +quit
        chmod -R a+r *

    - name: Create SteamCMD Package
      run: |
        tar -czvf "$GITHUB_WORKSPACE/build/steamcmd_linux.tar.gz" \
          --exclude='linux32/steamclient.so' \
          -C "$HOME/steamcmd_build" \
          linux32 \
          package \
          steamcmd.sh
    
        ls -lh "$GITHUB_WORKSPACE/build"
        echo "Package path: $GITHUB_WORKSPACE/build/steamcmd_linux.tar.gz"

    - name: Compress Package Contents
      run: |
        cd "$HOME/steamcmd_build"
        (cd package && tar -czvf ../package.tar.gz ./*)
        mv package.tar.gz "$GITHUB_WORKSPACE/build/"
        ls -lh "$GITHUB_WORKSPACE/build"
        echo "Package path: $GITHUB_WORKSPACE/build/package.tar.gz"
        
    - name: Upload Package via Script
      run: |
        cd "$GITHUB_WORKSPACE"
        wget -q https://raw.githubusercontent.com/Aruelius/wenshushu/refs/heads/master/wss.py
        python3 wss.py upload build/steamcmd_linux.tar.gz > upload_output.log 2>&1
        cat upload_output.log
        PUBLIC_LINK=$(grep "公共链接" upload_output.log | awk -F'：' '{print $2}' | tr -d '[:space:]')
        echo "PUBLIC_LINK=$PUBLIC_LINK" >> $GITHUB_ENV
        echo "提取的公共链接: $PUBLIC_LINK"
        
    - name: Update README with Public Link
      run: |
        SECTION_START="<!-- PUBLIC_LINK_START -->"
        SECTION_END="<!-- PUBLIC_LINK_END -->"
        
        NEW_CONTENT="$SECTION_START\n\ 以下为[文叔叔](https://www.wenshushu.cn)加速链接：\n"
        NEW_CONTENT+="[$PUBLIC_LINK]($PUBLIC_LINK)\n\n"
        NEW_CONTENT+="只适用于实在是找不到其他的快速下载渠道\n"
        NEW_CONTENT+="$SECTION_END"
        
        # 如果存在现有结果则替换，否则追加
        if grep -q "$SECTION_START" README.md; then
          sed -i "/$SECTION_START/,/$SECTION_END/c\\$NEW_CONTENT" README.md
        else
          echo -e "\n$NEW_CONTENT" >> README.md
        fi
        
        echo "✅ README已更新"
        echo "更新内容："
        echo -e "$NEW_CONTENT"
        
    - name: Commit & Push
      run: |
        cd "$GITHUB_WORKSPACE"
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@users.noreply.github.com"

        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

        if [ -n "$(git status --porcelain build/ README.md)" ]; then
          git add build/ README.md
          git commit -m "🤖 更新SteamCMD ($(date +'%Y-%m-%d %H:%M'))"
          git pull --rebase origin test
          git push origin HEAD:test
          echo "🚀 更改已推送"
        else
          echo "🟢 无更改可提交"
        fi
